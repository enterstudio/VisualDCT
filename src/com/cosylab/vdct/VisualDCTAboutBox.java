package com.cosylab.vdct;

/**
 * Copyright (c) 2002, Cosylab, Ltd., Control System Laboratory, www.cosylab.com
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer. 
 * Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation 
 * and/or other materials provided with the distribution. 
 * Neither the name of the Cosylab, Ltd., Control System Laboratory nor the names
 * of its contributors may be used to endorse or promote products derived 
 * from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE 
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE 
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, 
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

import java.awt.*;
import javax.swing.*;

/**
 * This type was generated by a SmartGuide.
 */
 
public class VisualDCTAboutBox extends JDialog {
	private JLabel ivjAppName = null;
	private JPanel ivjButtonPane = null;
	IvjEventHandler ivjEventHandler = new IvjEventHandler();
	private JPanel ivjIconPane = null;
	private JPanel ivjJDialogContentPane = null;
	private JButton ivjOkButton = null;
	private JPanel ivjTextPane = null;
	private JLabel ivjUserName = null;
	private JLabel ivjVersion = null;
	private JLabel ivjBuildVer = null;
	private JScrollPane ivjLicenseScrollPane = null;
	private JTextArea ivjLicenseTextArea = null;

class IvjEventHandler implements java.awt.event.ActionListener {
		public void actionPerformed(java.awt.event.ActionEvent e) {
			if (e.getSource() == VisualDCTAboutBox.this.getOkButton()) 
				connEtoM1(e);
		};
	};
/**
 * VisualDCTAboutBox constructor comment.
 */
public VisualDCTAboutBox() {
	super();
	initialize();
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Dialog
 */
public VisualDCTAboutBox(Dialog owner) {
	super(owner);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Dialog
 * @param title java.lang.String
 */
public VisualDCTAboutBox(Dialog owner, String title) {
	super(owner, title);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Dialog
 * @param title java.lang.String
 * @param modal boolean
 */
public VisualDCTAboutBox(Dialog owner, String title, boolean modal) {
	super(owner, title, modal);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Dialog
 * @param modal boolean
 */
public VisualDCTAboutBox(Dialog owner, boolean modal) {
	super(owner, modal);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Frame
 */
public VisualDCTAboutBox(Frame owner) {
	super(owner);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Frame
 * @param title java.lang.String
 */
public VisualDCTAboutBox(Frame owner, String title) {
	super(owner, title);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Frame
 * @param title java.lang.String
 * @param modal boolean
 */
public VisualDCTAboutBox(Frame owner, String title, boolean modal) {
	super(owner, title, modal);
}
/**
 * VisualDCTAboutBox constructor comment.
 * @param owner java.awt.Frame
 * @param modal boolean
 */
public VisualDCTAboutBox(Frame owner, boolean modal) {
	super(owner, modal);
}
/**
 * connEtoM1:  (OkButton.action.actionPerformed(java.awt.event.ActionEvent) --> VisualDCTAboutBox.dispose()V)
 * @param arg1 java.awt.event.ActionEvent
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void connEtoM1(java.awt.event.ActionEvent arg1) {
	try {
		// user code begin {1}
		// user code end
		this.dispose();
		// user code begin {2}
		// user code end
	} catch (java.lang.Throwable ivjExc) {
		// user code begin {3}
		// user code end
		handleException(ivjExc);
	}
}
/**
 * Return the AppName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getAppName() {
	if (ivjAppName == null) {
		try {
			ivjAppName = new javax.swing.JLabel();
			ivjAppName.setName("AppName");
			ivjAppName.setFont(new java.awt.Font("Arial", 2, 18));
			ivjAppName.setText("Visual DCT for Java");
			ivjAppName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjAppName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjAppName;
}
/**
 * Return the Spacer property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getBuildVer() {
	if (ivjBuildVer == null) {
		try {
			ivjBuildVer = new javax.swing.JLabel();
			ivjBuildVer.setName("BuildVer");
			ivjBuildVer.setText("build");
			ivjBuildVer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjBuildVer.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			ivjBuildVer.setVerticalTextPosition(javax.swing.SwingConstants.TOP);
			// user code begin {1}
			ivjBuildVer.setText(ivjBuildVer.getText()+" "+Version.BUILD);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjBuildVer;
}
/**
 * Return the ButtonPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getButtonPane() {
	if (ivjButtonPane == null) {
		try {
			ivjButtonPane = new javax.swing.JPanel();
			ivjButtonPane.setName("ButtonPane");
			ivjButtonPane.setLayout(new java.awt.FlowLayout());
			getButtonPane().add(getOkButton(), getOkButton().getName());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjButtonPane;
}
/**
 * Return the IconPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getIconPane() {
	if (ivjIconPane == null) {
		try {
			ivjIconPane = new javax.swing.JPanel();
			ivjIconPane.setName("IconPane");
			ivjIconPane.setLayout(new java.awt.BorderLayout());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjIconPane;
}
/**
 * Return the JDialogContentPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getJDialogContentPane() {
	if (ivjJDialogContentPane == null) {
		try {
			ivjJDialogContentPane = new javax.swing.JPanel();
			ivjJDialogContentPane.setName("JDialogContentPane");
			ivjJDialogContentPane.setLayout(new java.awt.BorderLayout());
			getJDialogContentPane().add(getButtonPane(), "South");
			getJDialogContentPane().add(getTextPane(), "Center");
			getJDialogContentPane().add(getIconPane(), "West");
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjJDialogContentPane;
}
/**
 * Return the LicenseScrollPane property value.
 * @return javax.swing.JScrollPane
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JScrollPane getLicenseScrollPane() {
	if (ivjLicenseScrollPane == null) {
		try {
			ivjLicenseScrollPane = new javax.swing.JScrollPane();
			ivjLicenseScrollPane.setName("LicenseScrollPane");
			getLicenseScrollPane().setViewportView(getLicenseTextArea());
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLicenseScrollPane;
}
/**
 * Return the LicenseTextArea property value.
 * @return javax.swing.JTextArea
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JTextArea getLicenseTextArea() {
	if (ivjLicenseTextArea == null) {
		try {
			ivjLicenseTextArea = new javax.swing.JTextArea();
			ivjLicenseTextArea.setName("LicenseTextArea");
			ivjLicenseTextArea.setAutoscrolls(true);
			ivjLicenseTextArea.setLineWrap(true);
			ivjLicenseTextArea.setWrapStyleWord(true);
			ivjLicenseTextArea.setText("Copyright (c) 2002, Cosylab, Ltd., Control System Laboratory, www.cosylab.com\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\nRedistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. \nRedistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. \nNeither the name of the Cosylab, Ltd., Control System Laboratory nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. \nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.");
			ivjLicenseTextArea.setPreferredSize(new java.awt.Dimension(611, 494));
			ivjLicenseTextArea.setRows(20);
			ivjLicenseTextArea.setBounds(0, 0, 160, 120);
			ivjLicenseTextArea.setEditable(false);
			ivjLicenseTextArea.setMinimumSize(new java.awt.Dimension(611, 494));
			ivjLicenseTextArea.setMargin(new java.awt.Insets(4, 4, 4, 4));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjLicenseTextArea;
}
/**
 * Return the OkButton property value.
 * @return javax.swing.JButton
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JButton getOkButton() {
	if (ivjOkButton == null) {
		try {
			ivjOkButton = new javax.swing.JButton();
			ivjOkButton.setName("OkButton");
			ivjOkButton.setPreferredSize(new java.awt.Dimension(68, 27));
			ivjOkButton.setText("OK");
			ivjOkButton.setMinimumSize(new java.awt.Dimension(68, 27));
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjOkButton;
}
/**
 * Return the TextPane property value.
 * @return javax.swing.JPanel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JPanel getTextPane() {
	if (ivjTextPane == null) {
		try {
			ivjTextPane = new javax.swing.JPanel();
			ivjTextPane.setName("TextPane");
			ivjTextPane.setLayout(new java.awt.GridBagLayout());

			java.awt.GridBagConstraints constraintsAppName = new java.awt.GridBagConstraints();
			constraintsAppName.gridx = 0; constraintsAppName.gridy = 0;
			constraintsAppName.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsAppName.insets = new java.awt.Insets(20, 0, 0, 0);
			getTextPane().add(getAppName(), constraintsAppName);

			java.awt.GridBagConstraints constraintsVersion = new java.awt.GridBagConstraints();
			constraintsVersion.gridx = 0; constraintsVersion.gridy = 1;
			constraintsVersion.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsVersion.insets = new java.awt.Insets(8, 0, 0, 0);
			getTextPane().add(getVersion(), constraintsVersion);

			java.awt.GridBagConstraints constraintsBuildVer = new java.awt.GridBagConstraints();
			constraintsBuildVer.gridx = 0; constraintsBuildVer.gridy = 2;
			constraintsBuildVer.insets = new java.awt.Insets(4, 0, 4, 0);
			getTextPane().add(getBuildVer(), constraintsBuildVer);

			java.awt.GridBagConstraints constraintsLicenseScrollPane = new java.awt.GridBagConstraints();
			constraintsLicenseScrollPane.gridx = 0; constraintsLicenseScrollPane.gridy = 4;
			constraintsLicenseScrollPane.fill = java.awt.GridBagConstraints.BOTH;
			constraintsLicenseScrollPane.weightx = 1.0;
			constraintsLicenseScrollPane.weighty = 10.0;
			constraintsLicenseScrollPane.insets = new java.awt.Insets(0, 10, 10, 10);
			getTextPane().add(getLicenseScrollPane(), constraintsLicenseScrollPane);

			java.awt.GridBagConstraints constraintsUserName = new java.awt.GridBagConstraints();
			constraintsUserName.gridx = 0; constraintsUserName.gridy = 3;
			constraintsUserName.fill = java.awt.GridBagConstraints.HORIZONTAL;
			constraintsUserName.insets = new java.awt.Insets(8, 0, 24, 0);
			getTextPane().add(getUserName(), constraintsUserName);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjTextPane;
}
/**
 * Return the UserName property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getUserName() {
	if (ivjUserName == null) {
		try {
			ivjUserName = new javax.swing.JLabel();
			ivjUserName.setName("UserName");
			ivjUserName.setText("by Matej Sekoranja (matej.sekoranja@cosylab.com)");
			ivjUserName.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			ivjUserName.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjUserName;
}
/**
 * Return the Version property value.
 * @return javax.swing.JLabel
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private javax.swing.JLabel getVersion() {
	if (ivjVersion == null) {
		try {
			ivjVersion = new javax.swing.JLabel();
			ivjVersion.setName("Version");
			ivjVersion.setText("Version");
			ivjVersion.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
			ivjVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
			// user code begin {1}
			ivjVersion.setText(ivjVersion.getText()+" "+Version.VERSION);
			// user code end
		} catch (java.lang.Throwable ivjExc) {
			// user code begin {2}
			// user code end
			handleException(ivjExc);
		}
	}
	return ivjVersion;
}
/**
 * Called whenever the part throws an exception.
 * @param exception java.lang.Throwable
 */
private void handleException(java.lang.Throwable exception) {
	System.out.println("--------- UNCAUGHT EXCEPTION ---------");
	exception.printStackTrace(System.out);
}
/**
 * Initializes connections
 * @exception java.lang.Exception The exception description.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initConnections() throws java.lang.Exception {
	// user code begin {1}
	// user code end
	getOkButton().addActionListener(ivjEventHandler);
}
/**
 * Initialize the class.
 */
/* WARNING: THIS METHOD WILL BE REGENERATED. */
private void initialize() {
	try {
		// user code begin {1}
		// user code end
		setName("VisualDCTAboutBox");
		setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
		setSize(686, 604);
		setTitle("About Visual DCT");
		setContentPane(getJDialogContentPane());
		initConnections();
	} catch (java.lang.Throwable ivjExc) {
		handleException(ivjExc);
	}
	// user code begin {2}
	// user code end
}
/**
 * main entrypoint - starts the part when it is run as an application
 * @param args java.lang.String[]
 */
public static void main(java.lang.String[] args) {
	try {
		VisualDCTAboutBox aVisualDCTAboutBox;
		aVisualDCTAboutBox = new VisualDCTAboutBox();
		aVisualDCTAboutBox.setModal(true);
		aVisualDCTAboutBox.addWindowListener(new java.awt.event.WindowAdapter() {
			public void windowClosing(java.awt.event.WindowEvent e) {
				System.exit(0);
			};
		});
		aVisualDCTAboutBox.show();
		java.awt.Insets insets = aVisualDCTAboutBox.getInsets();
		aVisualDCTAboutBox.setSize(aVisualDCTAboutBox.getWidth() + insets.left + insets.right, aVisualDCTAboutBox.getHeight() + insets.top + insets.bottom);
		aVisualDCTAboutBox.setVisible(true);
	} catch (Throwable exception) {
		System.err.println("Exception occurred in main() of javax.swing.JDialog");
		exception.printStackTrace(System.out);
	}
}
}
